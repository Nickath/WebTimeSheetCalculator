<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security-4.1.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

   <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/welcome/**" access="permitAll" />
        <intercept-url pattern="/homePage*" access="hasRole('ROLE_USER,ROLE_ADMIN')" />
 
      <!-- If an user tries to access any secured URL, then user will be authenticated with custom login page based on the configuration of <form-login> element. -->
        <form-login login-page="/loginPage" default-target-url="/homePage"
            authentication-failure-url="/loginPage" />
            <!-- default-target-url specifies the path of a method in controller where it has to go after successful authentication -->
            <!-- authentication-failure-url specifies the path of a method in controller where it has to go if authentication is failed -->
        <logout logout-success-url="/logout" logout-url="/j_spring_security_logout" />
        <csrf disabled="true" />
    </http>
 
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="select username, password, enabled from USER where username = ?"
                authorities-by-username-query="select u.username, ur.authority from USER u, ROLE ur where u.id = ur.id and u.username = ? " />
        </authentication-provider>
    </authentication-manager>
 
   
</beans:beans>